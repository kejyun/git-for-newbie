<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git 菜雞修煉場 – Submodule</title>
    <link>https://git-for-newbie.kejyun.com/categories/submodule/</link>
    <description>Recent content in Submodule on Git 菜雞修煉場</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 17 Apr 2021 00:50:29 +0800</lastBuildDate>
    
	  <atom:link href="https://git-for-newbie.kejyun.com/categories/submodule/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 子模組（Submodule）</title>
      <link>https://git-for-newbie.kejyun.com/docs/submodule/</link>
      <pubDate>Sat, 17 Apr 2021 00:50:29 +0800</pubDate>
      
      <guid>https://git-for-newbie.kejyun.com/docs/submodule/</guid>
      <description>
        
        
        &lt;h2 id=&#34;加入子模組&#34;&gt;加入子模組&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;1.建立子模組 repository&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;例如在 github 建立一個 KJModule 的子模組，建立完後一定要做一次 commit，這樣才可以順利的將子模組加入進去到其他專案&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git@github.com:kejyun/KJModule.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;2.加入子模組&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git submodule add &amp;lt;repository&amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&amp;lt;path&amp;gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git submodule add git@github.com:kejyun/KJModule.git ./app/KJModule
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;指定需要加入的子模組 Repository 以及子模組需要放到專案的哪個路徑中&lt;/p&gt;
&lt;h2 id=&#34;抓取含有子模組的專案&#34;&gt;抓取含有子模組的專案&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;1.取得資源庫&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git clone git@github.com:kejyun/KJ.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;2.初始化子模組並更新&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git submodule init
git submodule update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;變更子模組-repository-路徑&#34;&gt;變更子模組 repository 路徑&lt;/h2&gt;
&lt;p&gt;在 git 子目錄有 &lt;code&gt;.gitmodules&lt;/code&gt; 檔案，如果模組路徑要刪除或變更，需要修改此檔案&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;submodule &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;app/KeJyunModule&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; app/KeJyunModule
	&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; git@github.com:kejyun/KeJyunModule.git
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;submodule &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;app/KeJyunGroupModule&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; app/KeJyunGroupModule
	&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; git@github.com:kejyun/KeJyunGroupModule.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在隱藏目錄 &lt;code&gt;.git&lt;/code&gt; 中，找到你要變更的模組目錄的設定檔案&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.git/modules/&amp;lt;模組路徑&amp;gt;/config&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;vim ~/KeJyunProject/.git/modules/app/KeJyunModule/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 config 設定檔變更 &lt;code&gt;[remote&amp;quot;origin&amp;quot;]&lt;/code&gt; 的 &lt;code&gt;url&lt;/code&gt; 去變更子模組的路徑&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;core&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;repositoryformatversion&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;filemode&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;bare&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;logallrefupdates&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;ignorecase&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;precomposeunicode&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;worktree&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ../../../../app/KeJyunModule
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;remote &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;origin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; git@github.com:kejyun/KeJyunModule.git
	&lt;span style=&#34;color:#000&#34;&gt;fetch&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; +refs/heads/*:refs/remotes/origin/*
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;branch &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;remote&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; origin
	&lt;span style=&#34;color:#000&#34;&gt;merge&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; refs/heads/master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;更新-git-資料夾下的所有子模組&#34;&gt;更新 git 資料夾下的所有子模組&lt;/h2&gt;
&lt;p&gt;git 專案可以使用各種子模組去管理專案，但若子模組也有載入子模組的話，會需要依序地進去各個子模組將模組的子子模組抓下來，這樣會造成很大的困擾，所以可以使用下列指令一次就將所有的子模組皆載入下來&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;子模組使用注意事項&#34;&gt;子模組使用注意事項&lt;/h2&gt;
&lt;p&gt;因為子模組也可能會有自己的子模組，如果互相引用的話在抓取專案可能會造成 &lt;code&gt;遞迴&lt;/code&gt; 的狀況，導致專案 &lt;em&gt;無窮迴圈永遠抓不完&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;所以在規劃子模組至專案是，記得要規範好不同模組之間的依賴關係，小心 &lt;em&gt;&lt;strong&gt;不要造成遞迴子模組載入&lt;/strong&gt;&lt;/em&gt; 的狀況&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
